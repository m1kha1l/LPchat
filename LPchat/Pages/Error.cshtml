@page
@model ErrorModel
@{
    ViewData["Title"] = "Error";
}

<h1 class="text-danger">Error.</h1>
<h2 class="text-danger">An error occurred while processing your request.</h2>

@if (Model.ShowRequestId)
{
    <p>
        <strong>Request ID:</strong> <code>@Model.RequestId</code>
    </p>
}

<h3>Development Mode</h3>
<p>
    Swapping to the <strong>Development</strong> environment displays detailed information about the error that occurred.
</p>
<p>
    <strong>The Development environment shouldn't be enabled for deployed applications.</strong>
    It can result in displaying sensitive information from exceptions to end users.
    For local debugging, enable the <strong>Development</strong> environment by setting the <strong>ASPNETCORE_ENVIRONMENT</strong> environment variable to <strong>Development</strong>
    and restarting the app.
</p>

<script type="text/javascript">
    window.onload = function () {
        $.ajax({
            type: "POST",
            url: '/Operatorpage?handler=GetChatInfo',
            headers:
            {
                "RequestVerificationToken": $('input:hidden[name="__RequestVerificationToken"]').val()
            },
            success: function (response) {
                alert("go here");
            },
            error: function (request, error) {
                alert('ajax error: ' + error.responseText);
            }
        });
        // schedule the first invocation:
        setTimeout(getUserChatTable, 1000);
    }

    function getUserChatTable() {


        setTimeout(getUserChatTable, 1000);
    }
</script>